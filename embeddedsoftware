#include <DHT.h>
#define DHTPIN 2 // 습도센서 Signal 선 연결
#define DHTTYPE DHT22 // 습도센서 종류: DHT22
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <Servo.h>
#include <Wire.h>
#include <Adafruit_MLX90614.h>
DHT dht(DHTPIN, DHTTYPE);
Servo myservo;
 
LiquidCrystal_I2C lcd(0x27,16,2); // LCD주소: 0x27 또는 0x3F
float hum; // 습도값 저장 변수
float temp; // 온도값 저장 변수


int servoPin = 10;

Adafruit_MLX90614 mlx = Adafruit_MLX90614();

void setup() {
  Serial.begin(9600);
  dht.begin();
  delay(2000);
  lcd.init();
  lcd.backlight();
  lcd.setCursor(2,0);
  delay(5000);
  lcd.clear();
  pinMode(4, OUTPUT);
  pinMode(5, OUTPUT);
  pinMode(6, OUTPUT);
  myservo.attach(9);
  servo.attach(servoPin);
  mlx.begin();   
}
 
void loop() {
  hum = dht.readHumidity();//온도값 읽기
  temp= dht.readTemperature();//습도값 읽기
 
  Serial.print("HUMIDITY: "); // "HUMIDITY:" 출력
  Serial.print(hum,0);// 습도 값 소수점 이하 자리 없음
  Serial.print(" %, TEMPERATURE: "); //"%"(습도단위) "TEMPERATURE:" 출력
  Serial.print(temp, 1);//온도값은 소수점 이하 1자리까지 표시
  Serial.println(" C"); //"C" 온도 단위 표시
  lcd.setCursor(0,0); // LCD Cursor 원점
  lcd.print("TEMP:"); // LCD에 "temp" 표시
 
  float t = temp; // 온도값을 t에 할당
  lcd.print(t,1); // 온도값 LCD로 출력
  lcd.print(" C"); // 온도 단위 표시
  lcd.setCursor(0,1); //LCD 커서 줄바꿈
  lcd.print("HUMIDITY:"); //LCD 2번째 줄에 "humidity:" 출력
  int h = hum; //습도값 h에 할당
  lcd.print(h); //습도값 LCD에 출력
  lcd.print(" % "); //습도 단위 출력
  lcd.println();
  delay(2000); // 샘플링 간격 2초

  // 정문 코드
  if (mlx.readObjectTempC()< 37.5 ); // 37.5도 이하일때만 문을 열게 합니다.
  for(angle = 0; angle < 120; angle++) 
  { 
    servo.write(angle); 
    delay(15); 
  } 
  delay(3000);
  digitalWrite(4, HIGH);
  // now scan back from 180 to 0 degrees
  for(angle = 120; angle > 0; angle--) 
  { 
    servo.write(angle); 
    delay(15); 
    
    
  } 
  // 창문 코드
  int Val_light=analogRead(0);  // 0번핀에서 아날로그 값을 받아서 변수 Val_light에 넣습니다.
  Serial.println(Val_light);  // val_light 값을 확인하기위해서 통신으로 보여줍니다.
  int angle=map(Val_light,0,180,0,180);  //들어온 값 0-300을 0-180도 각도에 맞게 맵핑해서 angle변수에

  myservo.write(angle);  // angle 값에 맞는 각도로 서보모터를 움직여 줍니다.
  delay(100);
  

  
}
